{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\prosjekt-4-jns\\\\frontend\\\\src\\\\Components\\\\Header\\\\SignLogIn.tsx\";\nimport React, { useState } from \"react\";\nimport { Input, Modal, Message } from \"semantic-ui-react\";\nimport { Button } from '@material-ui/core';\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../actions\";\n\nfunction SignLogIn() {\n  // Nødvendig for redux\n  const dispatch = useDispatch(); // Holder styr på inputs\n\n  const [userName, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // Holder styr på error\n\n  const [error, setError] = useState(false); // Lager request for fetch\n\n  const req = reqUser => {\n    return {\n      method: 'POST',\n      body: JSON.stringify(reqUser),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  }; // Legger til en bruker på serveren\n\n\n  function addUser(reqUser) {\n    fetch('http://localhost:5000/api/user/add', req(reqUser)).then(response => {\n      if (response.ok) {\n        dispatch(login(reqUser));\n      } else {\n        setError({\n          message: \"Username is taken\",\n          log: false\n        });\n      }\n    });\n  } // Logger inn hvis brukeren finnes\n\n\n  function onLogin(user) {\n    fetch('http://localhost:5000/api/user?userName=' + user.userName + '&password=' + user.password).then(response => {\n      if (response.ok) {\n        response.json().then(movies => {\n          user.movies = movies;\n          dispatch(login(user));\n        });\n      } else {\n        setError({\n          message: \"Username or password is wrong\",\n          log: true\n        });\n      }\n    });\n  } // @ts-ignore\n\n\n  function handleNameChange(value) {\n    setError(false);\n    setUsername(value);\n  } // @ts-ignore\n\n\n  function handlePasswordChange(value) {\n    setError(false);\n    setPassword(value);\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    size: \"mini\",\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      style: {\n        zIndex: '1000000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"Log in/Sign up\"),\n    closeIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Log in / Sign in\"), error ? /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    compact: true,\n    error: true,\n    content: error.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }\n  })) : null, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    error: !!error,\n    id: \"UsernameID\",\n    autoFocus: true,\n    label: \"Username\",\n    onChange: (e, {\n      value\n    }) => handleNameChange(value),\n    name: \"userName\",\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    error: !!error && error.log,\n    id: \"PasswordID\",\n    label: \"Password\",\n    onChange: (e, {\n      value\n    }) => handlePasswordChange(value),\n    name: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"loginButtonID\",\n    onClick: () => onLogin({\n      userName: userName,\n      password: password,\n      movies: []\n    }),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"submitButtonID\",\n    onClick: () => addUser({\n      userName: userName,\n      password: password,\n      movies: []\n    }),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Sign up\")));\n}\n\nexport default SignLogIn;","map":{"version":3,"sources":["C:/webdev/prosjekt-4-jns/frontend/src/Components/Header/SignLogIn.tsx"],"names":["React","useState","Input","Modal","Message","Button","useDispatch","login","SignLogIn","dispatch","userName","setUsername","password","setPassword","error","setError","req","reqUser","method","body","JSON","stringify","headers","addUser","fetch","then","response","ok","message","log","onLogin","user","json","movies","handleNameChange","value","handlePasswordChange","zIndex","e"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Input, Modal, Message} from \"semantic-ui-react\";\r\nimport {Button} from '@material-ui/core'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {User} from \"../../types/User\";\r\nimport {login} from \"../../actions\";\r\n\r\nfunction SignLogIn() {\r\n\r\n    // Nødvendig for redux\r\n    const dispatch = useDispatch();\r\n\r\n    // Holder styr på inputs\r\n    const [userName, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // Holder styr på error\r\n    const [error, setError] = useState<false | {message: string, log: boolean }>(false);\r\n\r\n    // Lager request for fetch\r\n    const req = (reqUser: User) => {\r\n        return ({\r\n            method: 'POST',\r\n            body: JSON.stringify(reqUser),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    // Legger til en bruker på serveren\r\n    function addUser(reqUser: User) {\r\n        fetch('http://localhost:5000/api/user/add', req(reqUser))\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    dispatch(login(reqUser));\r\n                } else {\r\n                    setError({message: \"Username is taken\", log: false});\r\n                }})\r\n    }\r\n\r\n    // Logger inn hvis brukeren finnes\r\n    function onLogin(user: User) {\r\n        fetch('http://localhost:5000/api/user?userName=' + user.userName + '&password='+user.password)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json()\r\n                        .then(movies => {\r\n                            user.movies = movies;\r\n                            dispatch(login(user))\r\n                        })\r\n                } else {\r\n                    setError({message: \"Username or password is wrong\", log: true});\r\n                }})\r\n    }\r\n\r\n    // @ts-ignore\r\n    function handleNameChange(value: string) {\r\n        setError(false);\r\n        setUsername(value);\r\n    }\r\n\r\n    // @ts-ignore\r\n    function handlePasswordChange(value: string) {\r\n        setError(false);\r\n        setPassword(value)\r\n    }\r\n\r\n    return (\r\n        <Modal centered size={\"mini\"}\r\n               trigger={<Button style={{zIndex: '1000000'}}>Log in/Sign up</Button>}\r\n               closeIcon>\r\n            <Modal.Header>Log in / Sign in</Modal.Header>\r\n            {error ? (\r\n                <Modal.Content>\r\n                   <Message compact error content={error.message}/>\r\n                </Modal.Content>\r\n            ) : null}\r\n            <Modal.Content>\r\n                <Input error={!!error} id={\"UsernameID\"} autoFocus label={\"Username\"} onChange={(e, {value}) => handleNameChange(value)}\r\n                       name={\"userName\"} placeholder='Username'/>\r\n            </Modal.Content>\r\n            <Modal.Content>\r\n                <Input type={\"password\"} error={!!error && error.log} id={\"PasswordID\"} label={\"Password\"} onChange={(e, {value}) => handlePasswordChange(value)}\r\n                       name={\"password\"} placeholder='Password'/>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button id={\"loginButtonID\"} onClick={() => onLogin({\r\n                    userName: userName,\r\n                    password: password,\r\n                    movies: []\r\n                })} type='submit'>Log in</Button>\r\n                <Button id={\"submitButtonID\"}\r\n                        onClick={() => addUser({userName: userName, password: password, movies: []})} type='submit'>Sign\r\n                    up</Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SignLogIn;"]},"metadata":{},"sourceType":"module"}