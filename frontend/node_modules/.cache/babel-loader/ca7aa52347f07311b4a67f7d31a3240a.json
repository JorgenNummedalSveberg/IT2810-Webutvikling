{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\prosjekt-4-jns\\\\frontend\\\\src\\\\Components\\\\ControlPanel\\\\GenreSelector.tsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './CSS/ControlPanel.css';\nimport './CSS/ControlPanelMobile.css';\nimport { setGenre } from \"../../actions\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport React from \"react\";\n\n// Endrer sjanger vi søker etter\nfunction GenreSelector(props) {\n  // Nødvendig for redux\n  const dispatch = useDispatch(); // Henter inn sjangre fra redux state\n\n  const genres = useSelector(state => state.genres); // Henter inn sjangre fra redux state\n\n  const genre = useSelector(state => state.filter.genre); // Definerer options for dropdown meny\n\n  const genreOptions = genres.map((genre, index) => {\n    return {\n      key: genre,\n      text: genre,\n      value: genre,\n      id: genre\n    };\n  }); // Opdaterer state når du endrer sjanger\n\n  function onSearchChange(e, data) {\n    dispatch(setGenre(data.props.value));\n    props.refresh();\n  }\n\n  return /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    value: genre,\n    defaultValue: \"\",\n    onChange: onSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Select genre...\"), genreOptions.map((genreOption, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: genreOption.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 55\n    }\n  }, genreOption.text)));\n}\n\nexport default GenreSelector;","map":{"version":3,"sources":["C:/webdev/prosjekt-4-jns/frontend/src/Components/ControlPanel/GenreSelector.tsx"],"names":["useDispatch","useSelector","setGenre","MenuItem","Select","React","GenreSelector","props","dispatch","genres","state","genre","filter","genreOptions","map","index","key","text","value","id","onSearchChange","e","data","refresh","genreOption"],"mappings":";AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,wBAAP;AACA,OAAO,8BAAP;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,mBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAAuD;AAEnD;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAHmD,CAKnD;;AACA,QAAMS,MAAM,GAAGR,WAAW,CAAES,KAAD,IAAkBA,KAAK,CAACD,MAAzB,CAA1B,CANmD,CAQnD;;AACA,QAAME,KAAK,GAAGV,WAAW,CAAES,KAAD,IAAkBA,KAAK,CAACE,MAAN,CAAaD,KAAhC,CAAzB,CATmD,CAWnD;;AACA,QAAME,YAAY,GAAGJ,MAAM,CAACK,GAAP,CAAW,CAACH,KAAD,EAAQI,KAAR,KAAkB;AAC9C,WAAO;AAACC,MAAAA,GAAG,EAAEL,KAAN;AAAaM,MAAAA,IAAI,EAAEN,KAAnB;AAA0BO,MAAAA,KAAK,EAAEP,KAAjC;AAAwCQ,MAAAA,EAAE,EAAER;AAA5C,KAAP;AACH,GAFoB,CAArB,CAZmD,CAgBnD;;AACA,WAASS,cAAT,CAAwBC,CAAxB,EAAgCC,IAAhC,EAA2C;AACvCd,IAAAA,QAAQ,CAACN,QAAQ,CAACoB,IAAI,CAACf,KAAL,CAAWW,KAAZ,CAAT,CAAR;AACAX,IAAAA,KAAK,CAACgB,OAAN;AACH;;AAED,sBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAEZ,KAFX;AAGI,IAAA,YAAY,EAAE,EAHlB;AAII,IAAA,QAAQ,EAAES,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,EAOKP,YAAY,CAACC,GAAb,CAAiB,CAACU,WAAD,EAAcT,KAAd,kBAAwB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAsB,IAAA,KAAK,EAAES,WAAW,CAACN,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDM,WAAW,CAACP,IAA7D,CAAzC,CAPL,CADJ;AAWH;;AAED,eAAeX,aAAf","sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\r\nimport './CSS/ControlPanel.css';\r\nimport './CSS/ControlPanelMobile.css';\r\nimport {setGenre} from \"../../actions\";\r\nimport {MenuItem, Select} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {State} from \"../../types/State\";\r\n\r\n// Endrer sjanger vi søker etter\r\nfunction GenreSelector(props: { refresh: () => void }) {\r\n\r\n    // Nødvendig for redux\r\n    const dispatch = useDispatch();\r\n\r\n    // Henter inn sjangre fra redux state\r\n    const genres = useSelector((state: State) => state.genres);\r\n\r\n    // Henter inn sjangre fra redux state\r\n    const genre = useSelector((state: State) => state.filter.genre);\r\n\r\n    // Definerer options for dropdown meny\r\n    const genreOptions = genres.map((genre, index) => {\r\n        return {key: genre, text: genre, value: genre, id: genre};\r\n    });\r\n\r\n    // Opdaterer state når du endrer sjanger\r\n    function onSearchChange(e: any, data: any) {\r\n        dispatch(setGenre(data.props.value));\r\n        props.refresh();\r\n    }\r\n\r\n    return (\r\n        <Select\r\n            variant='outlined'\r\n            value={genre}\r\n            defaultValue={\"\"}\r\n            onChange={onSearchChange}\r\n        >\r\n            <MenuItem value={\"\"}>Select genre...</MenuItem>\r\n            {genreOptions.map((genreOption, index) => <MenuItem key={index} value={genreOption.value}>{genreOption.text}</MenuItem>)}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default GenreSelector"]},"metadata":{},"sourceType":"module"}