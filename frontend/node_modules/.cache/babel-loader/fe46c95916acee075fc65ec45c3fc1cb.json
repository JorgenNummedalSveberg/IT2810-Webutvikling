{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\prosjekt-4-jns\\\\frontend\\\\src\\\\Components\\\\Header\\\\Header.tsx\";\nimport React, { useRef, useState } from 'react';\nimport './CSS/Header.css';\nimport './CSS/SearchField.css';\nimport SortingPanel from \"./SortingPanel\";\nimport { Button, Input } from \"@material-ui/core\";\nimport { logout, setSearch } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SignLogIn from \"./SignLogIn\";\n\nfunction Header(props) {\n  // Nødvendig for redux\n  const dispatch = useDispatch(); // State som holder styr på loading icon på input\n\n  const [loading, setLoading] = useState(false); // Tom timeout ref som defineres først;\n\n  let timeoutRef = useRef(setTimeout(() => {}, 0)); // Når input endres tømmer vi den aktive timeouten og starter på nytt. Når der har gått 300ms, bytt ut search filter i state og refresh\n\n  function onChange(e) {\n    setLoading(true);\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      setLoading(false);\n      dispatch(setSearch(e.target.value));\n      props.refresh();\n    }, 300);\n  }\n\n  const user = useSelector(state => state.user); //Brukes for å skru av og på burgermenyen\n\n  let [showMenu, toggleShowMenu] = useState(false);\n\n  function toggleMenu() {\n    toggleShowMenu(!showMenu);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Header\",\n    id: \"HeaderID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"searchbar\",\n    onChange: onChange,\n    loading: loading,\n    className: \"SearchField\",\n    placeholder: \"Search...\",\n    role: \"searcher\",\n    size: \"huge\",\n    icon: \"search\",\n    iconPosition: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginButtons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, !!user ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(logout()),\n    style: {\n      zIndex: '1000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }\n  }, \"Log out\") : /*#__PURE__*/React.createElement(SignLogIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(SortingPanel, {\n    refresh: props.refresh,\n    show: showMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"BurgerButton\",\n    id: \"burgerID\",\n    onClick: toggleMenu,\n    width: \"50\",\n    viewBox: \"0 0 150 125\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"line\", {\n    y1: \"5\",\n    x2: \"150\",\n    y2: showMenu ? \"122\" : \"5\",\n    stroke: \"white\",\n    strokeWidth: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    y1: \"65\",\n    x2: \"150\",\n    y2: \"65\",\n    stroke: \"white\",\n    strokeWidth: \"10\",\n    visibility: showMenu ? \"hidden\" : \"visible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    y1: \"122\",\n    x2: \"150\",\n    y2: showMenu ? \"5\" : \"122\",\n    stroke: \"white\",\n    strokeWidth: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Header;","map":{"version":3,"sources":["C:/webdev/prosjekt-4-jns/frontend/src/Components/Header/Header.tsx"],"names":["React","useRef","useState","SortingPanel","Button","Input","logout","setSearch","useDispatch","useSelector","SignLogIn","Header","props","dispatch","loading","setLoading","timeoutRef","setTimeout","onChange","e","clearTimeout","current","target","value","refresh","user","state","showMenu","toggleShowMenu","toggleMenu","zIndex"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport './CSS/Header.css';\r\nimport './CSS/SearchField.css';\r\nimport SortingPanel from \"./SortingPanel\";\r\nimport {Button, Input} from \"@material-ui/core\";\r\nimport {logout, setSearch} from \"../../actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SignLogIn from \"./SignLogIn\";\r\nimport {State} from \"../../types/State\";\r\n\r\n\r\nfunction Header(props: { refresh: () => void }) {\r\n    // Nødvendig for redux\r\n    const dispatch = useDispatch();\r\n    // State som holder styr på loading icon på input\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    // Tom timeout ref som defineres først;\r\n    let timeoutRef = useRef(setTimeout(() => {\r\n    }, 0));\r\n\r\n    // Når input endres tømmer vi den aktive timeouten og starter på nytt. Når der har gått 300ms, bytt ut search filter i state og refresh\r\n    function onChange(e: any) {\r\n        setLoading(true)\r\n        clearTimeout(timeoutRef.current);\r\n        timeoutRef.current = setTimeout(() => {\r\n            setLoading(false);\r\n            dispatch(setSearch(e.target.value));\r\n            props.refresh();\r\n        }, 300);\r\n    }\r\n\r\n    const user = useSelector((state: State) => state.user);\r\n\r\n    //Brukes for å skru av og på burgermenyen\r\n    let [showMenu, toggleShowMenu] = useState(false);\r\n\r\n    function toggleMenu() {\r\n        toggleShowMenu(!showMenu);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Header\" id=\"HeaderID\">\r\n            <Input id=\"searchbar\" onChange={onChange} loading={loading} className={\"SearchField\"}\r\n                   placeholder='Search...' role=\"searcher\" size=\"huge\" icon='search' iconPosition='left'/>\r\n            <div className=\"loginButtons\">\r\n                {!!user ? (<Button onClick={() => dispatch(logout())} style={{zIndex: '1000000'}}>Log out</Button>) :\r\n                    (<SignLogIn/>)}\r\n            </div>\r\n            <SortingPanel refresh={props.refresh} show={showMenu}/>\r\n            <svg className={\"BurgerButton\"} id={\"burgerID\"} onClick={toggleMenu} width=\"50\" viewBox=\"0 0 150 125\" fill=\"none\"\r\n                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                <line y1=\"5\" x2=\"150\" y2={showMenu ? \"122\" : \"5\"} stroke=\"white\" strokeWidth=\"10\"/>\r\n                <line y1=\"65\" x2=\"150\" y2=\"65\" stroke=\"white\" strokeWidth=\"10\"\r\n                      visibility={showMenu ? \"hidden\" : \"visible\"}/>\r\n                <line y1=\"122\" x2=\"150\" y2={showMenu ? \"5\" : \"122\"} stroke=\"white\" strokeWidth=\"10\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}