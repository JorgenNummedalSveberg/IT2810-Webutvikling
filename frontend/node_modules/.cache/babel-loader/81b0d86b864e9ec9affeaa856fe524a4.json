{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\prosjekt-4-jns\\\\frontend\\\\src\\\\Components\\\\Header\\\\Header.tsx\";\nimport React, { useRef, useState } from 'react';\nimport { TextField, useMediaQuery } from \"@material-ui/core\";\nimport { setSearch } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SignLogIn from \"./SignLogIn\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport SortButton from \"./SortButton\";\nimport { sortBy } from \"../../App\";\n\nfunction Header(props) {\n  // Nødvendig for redux\n  const dispatch = useDispatch(); // State som holder styr på loading icon på input\n\n  const [searchString, setSearchString] = useState(\"\"); // Tom timeout ref som defineres først;\n\n  let timeoutRef = useRef(setTimeout(() => {}, 0)); // Når input endres tømmer vi den aktive timeouten og starter på nytt. Når der har gått 300ms, bytt ut search filter i state og refresh\n\n  function onChange(e) {\n    const value = e.target.value;\n    setSearchString(value);\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      dispatch(setSearch(value));\n      props.refresh();\n    }, 300);\n  }\n\n  const user = useSelector(state => state.user);\n  const classes = makeStyles({\n    root: {\n      height: '100%',\n      backgroundColor: '#8E8D8A',\n      display: 'flex',\n      flexDirection: useMediaQuery('(max-width: 1400px)').valueOf() ? 'column' : 'row',\n      alignItems: useMediaQuery('(max-width: 1400px)').valueOf() ? 'center' : 'flex-end',\n      padding: '20px'\n    },\n    label: {\n      color: 'white'\n    },\n    textInput: {\n      backgroundColor: 'rgb(200, 200, 200, 0.5)',\n      color: 'white',\n      borderRadius: '10px'\n    },\n    searchBox: {\n      width: useMediaQuery('(max-width: 1400px)').valueOf() ? '80%' : '17%',\n      maxWidth: '500px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      padding: '10px',\n      '& *': {\n        margin: 0\n      }\n    },\n    buttons: {\n      width: useMediaQuery('(max-width: 1400px)').valueOf() ? '' : '20%'\n    },\n    sorting: {\n      width: '60%',\n      display: useMediaQuery('(max-width: 1400px)').valueOf() ? 'none' : 'flex',\n      justifyContent: 'flex-end',\n      height: '100%',\n      '& *': {\n        width: 1 / sortBy.length * 100 + '%',\n        fontSize: '1.5em',\n        height: '60px'\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes().root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes().searchBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes().label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Search by title\"), /*#__PURE__*/React.createElement(TextField, {\n    variant: 'outlined',\n    inputProps: {\n      'data-testid': 'searcher',\n      className: classes().textInput\n    },\n    value: searchString,\n    onChange: onChange,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes().buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SignLogIn, {\n    isLogged: !user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes().sorting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, sortBy.map((sort, index) => /*#__PURE__*/React.createElement(SortButton, {\n    mobile: false,\n    key: index,\n    sort: sort,\n    refresh: props.refresh,\n    nummer: index.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Header;","map":{"version":3,"sources":["C:/webdev/prosjekt-4-jns/frontend/src/Components/Header/Header.tsx"],"names":["React","useRef","useState","TextField","useMediaQuery","setSearch","useDispatch","useSelector","SignLogIn","makeStyles","SortButton","sortBy","Header","props","dispatch","searchString","setSearchString","timeoutRef","setTimeout","onChange","e","value","target","clearTimeout","current","refresh","user","state","classes","root","height","backgroundColor","display","flexDirection","valueOf","alignItems","padding","label","color","textInput","borderRadius","searchBox","width","maxWidth","justifyContent","margin","buttons","sorting","length","fontSize","className","map","sort","index","toString"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport {TextField, useMediaQuery} from \"@material-ui/core\";\r\nimport {setSearch} from \"../../actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SignLogIn from \"./SignLogIn\";\r\nimport {State} from \"../../types/State\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport SortButton from \"./SortButton\";\r\nimport {sortBy} from \"../../App\";\r\n\r\n\r\nfunction Header(props: { refresh: () => void }) {\r\n    // Nødvendig for redux\r\n    const dispatch = useDispatch();\r\n    // State som holder styr på loading icon på input\r\n    const [searchString, setSearchString] = useState(\"\");\r\n\r\n    // Tom timeout ref som defineres først;\r\n    let timeoutRef = useRef(setTimeout(() => {\r\n    }, 0));\r\n\r\n    // Når input endres tømmer vi den aktive timeouten og starter på nytt. Når der har gått 300ms, bytt ut search filter i state og refresh\r\n    function onChange(e: any) {\r\n        const value = e.target.value;\r\n        setSearchString(value);\r\n        clearTimeout(timeoutRef.current);\r\n        timeoutRef.current = setTimeout(() => {\r\n            dispatch(setSearch(value));\r\n            props.refresh();\r\n        }, 300);\r\n    }\r\n\r\n    const user = useSelector((state: State) => state.user);\r\n\r\n    const classes = makeStyles({\r\n        root: {\r\n            height: '100%',\r\n            backgroundColor: '#8E8D8A',\r\n            display: 'flex',\r\n            flexDirection: useMediaQuery('(max-width: 1400px)').valueOf() ? 'column' : 'row',\r\n            alignItems: useMediaQuery('(max-width: 1400px)').valueOf() ? 'center' : 'flex-end',\r\n            padding: '20px',\r\n        },\r\n        label: {\r\n            color: 'white',\r\n        },\r\n        textInput: {\r\n            backgroundColor: 'rgb(200, 200, 200, 0.5)',\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n        },\r\n        searchBox: {\r\n            width: useMediaQuery('(max-width: 1400px)').valueOf() ? '80%' : '17%',\r\n            maxWidth: '500px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            padding: '10px',\r\n            '& *': {\r\n                margin: 0,\r\n            }\r\n        },\r\n        buttons: {\r\n            width: useMediaQuery('(max-width: 1400px)').valueOf() ? '' : '20%',\r\n        },\r\n        sorting: {\r\n            width: '60%',\r\n            display: useMediaQuery('(max-width: 1400px)').valueOf() ? 'none' : 'flex',\r\n            justifyContent: 'flex-end',\r\n            height: '100%',\r\n            '& *': {\r\n                width: (1 / sortBy.length) * 100 + '%',\r\n                fontSize: '1.5em',\r\n                height: '60px'\r\n            }\r\n        },\r\n    })\r\n\r\n    return (\r\n        <div className={classes().root}>\r\n            <div className={classes().searchBox}>\r\n                <h2 className={classes().label}>Search by title</h2>\r\n                <TextField\r\n                    variant={'outlined'}\r\n                    inputProps={{'data-testid': 'searcher', className: classes().textInput}}\r\n                    value={searchString}\r\n                    onChange={onChange}\r\n                    placeholder='Search...'\r\n                />\r\n            </div>\r\n            <div className={classes().buttons}>\r\n                <SignLogIn isLogged={!user}/>\r\n            </div>\r\n            <div className={classes().sorting}>\r\n                {sortBy.map((sort, index) => (\r\n                    <SortButton mobile={false} key={index} sort={sort} refresh={props.refresh}\r\n                                nummer={index.toString()}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}