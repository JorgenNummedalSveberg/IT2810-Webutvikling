{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\prosjekt-4-jns\\\\frontend\\\\src\\\\Components\\\\Header\\\\SignLogIn.tsx\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login, logout } from \"../../actions\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Input } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nfunction SignLogIn(props) {\n  // Nødvendig for redux\n  const dispatch = useDispatch(); // Holder styr på inputs\n\n  const [userName, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [open, setOpen] = useState(false); // Holder styr på error\n\n  const [error, setError] = useState(false); // Lager request for fetch\n\n  const req = reqUser => {\n    return {\n      method: 'POST',\n      body: JSON.stringify(reqUser),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  }; // Legger til en bruker på serveren\n\n\n  function addUser(reqUser) {\n    setOpen(false);\n    fetch('http://localhost:5000/api/user/add', req(reqUser)).then(response => {\n      if (response.ok) {\n        dispatch(login(reqUser));\n      } else {\n        setError({\n          message: \"Username is taken\",\n          log: false\n        });\n      }\n    });\n  } // Logger inn hvis brukeren finnes\n\n\n  function onLogin(user) {\n    setOpen(false);\n    fetch('http://localhost:5000/api/user?userName=' + user.userName + '&password=' + user.password).then(response => {\n      if (response.ok) {\n        response.json().then(movies => {\n          user.movies = movies;\n          dispatch(login(user));\n        });\n      } else {\n        setError({\n          message: \"Username or password is wrong\",\n          log: true\n        });\n      }\n    });\n  } // @ts-ignore\n\n\n  function handleNameChange(value) {\n    setError(false);\n    setUsername(value);\n  } // @ts-ignore\n\n\n  function handlePasswordChange(value) {\n    setError(false);\n    setPassword(value);\n  }\n\n  const classes = makeStyles({\n    loginButton: {\n      backgroundColor: '#E85A4F',\n      borderRadius: '5px',\n      margin: '10px',\n      '& span': {\n        fontSize: '1.8em',\n        color: 'white'\n      }\n    },\n    none: {\n      display: 'none'\n    },\n    initial: {\n      display: 'initial'\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${props.isLogged ? classes().initial : classes().none}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes().loginButton,\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Log in/Sign up\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: () => setOpen(false),\n    title: \"Log in/Sign up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Log in/Sign up\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    error: !!error,\n    id: \"UsernameID\",\n    autoFocus: true,\n    title: \"Username\",\n    onChange: e => handleNameChange(e.target.value),\n    name: \"userName\",\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    error: !!error && error.log,\n    id: \"PasswordID\",\n    title: \"Password\",\n    onChange: e => handlePasswordChange(e.target.value),\n    name: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"loginButtonID\",\n    onClick: () => onLogin({\n      userName: userName,\n      password: password,\n      movies: []\n    }),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"submitButtonID\",\n    onClick: () => addUser({\n      userName: userName,\n      password: password,\n      movies: []\n    }),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"Sign up\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${props.isLogged ? classes().none : classes().initial}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(logout()),\n    className: classes().loginButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Log out\")));\n}\n\nexport default SignLogIn;","map":{"version":3,"sources":["C:/webdev/prosjekt-4-jns/frontend/src/Components/Header/SignLogIn.tsx"],"names":["React","useState","useDispatch","login","logout","Button","Dialog","DialogActions","DialogContent","DialogTitle","Input","makeStyles","SignLogIn","props","dispatch","userName","setUsername","password","setPassword","open","setOpen","error","setError","req","reqUser","method","body","JSON","stringify","headers","addUser","fetch","then","response","ok","message","log","onLogin","user","json","movies","handleNameChange","value","handlePasswordChange","classes","loginButton","backgroundColor","borderRadius","margin","fontSize","color","none","display","initial","isLogged","e","target"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {User} from \"../../types/User\";\r\nimport {login, logout} from \"../../actions\";\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, Input} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nfunction SignLogIn(props: { isLogged: boolean }) {\r\n\r\n    // Nødvendig for redux\r\n    const dispatch = useDispatch();\r\n\r\n    // Holder styr på inputs\r\n    const [userName, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    // Holder styr på error\r\n    const [error, setError] = useState<false | { message: string, log: boolean }>(false);\r\n\r\n    // Lager request for fetch\r\n    const req = (reqUser: User) => {\r\n        return ({\r\n            method: 'POST',\r\n            body: JSON.stringify(reqUser),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    // Legger til en bruker på serveren\r\n    function addUser(reqUser: User) {\r\n        setOpen(false);\r\n        fetch('http://localhost:5000/api/user/add', req(reqUser))\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    dispatch(login(reqUser));\r\n                } else {\r\n                    setError({message: \"Username is taken\", log: false});\r\n                }\r\n            })\r\n    }\r\n\r\n    // Logger inn hvis brukeren finnes\r\n    function onLogin(user: User) {\r\n        setOpen(false);\r\n        fetch('http://localhost:5000/api/user?userName=' + user.userName + '&password=' + user.password)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json()\r\n                        .then(movies => {\r\n                            user.movies = movies;\r\n                            dispatch(login(user))\r\n                        })\r\n                } else {\r\n                    setError({message: \"Username or password is wrong\", log: true});\r\n                }\r\n            })\r\n    }\r\n\r\n    // @ts-ignore\r\n    function handleNameChange(value: string) {\r\n        setError(false);\r\n        setUsername(value);\r\n    }\r\n\r\n    // @ts-ignore\r\n    function handlePasswordChange(value: string) {\r\n        setError(false);\r\n        setPassword(value)\r\n    }\r\n\r\n    const classes = makeStyles({\r\n        loginButton: {\r\n            backgroundColor: '#E85A4F',\r\n            borderRadius: '5px',\r\n            margin: '10px',\r\n            '& span': {\r\n                fontSize: '1.8em',\r\n                color: 'white',\r\n            }\r\n        },\r\n        none: {\r\n            display: 'none'\r\n        },\r\n        initial: {\r\n            display: 'initial'\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <div className={`${props.isLogged ? classes().initial : classes().none}`}>\r\n                <Button className={classes().loginButton} onClick={() => setOpen(true)}>Log in/Sign up</Button>\r\n                <Dialog open={open} onClose={() => setOpen(false)} title='Log in/Sign up'>\r\n                    <DialogTitle>Log in/Sign up</DialogTitle>\r\n                    <DialogContent>\r\n                        <Input error={!!error} id={\"UsernameID\"} autoFocus title={\"Username\"}\r\n                               onChange={(e) => handleNameChange(e.target.value)}\r\n                               name={\"userName\"} placeholder='Username'/>\r\n                    </DialogContent>\r\n                    <DialogContent>\r\n                        <Input type={\"password\"} error={!!error && error.log} id={\"PasswordID\"} title={\"Password\"}\r\n                               onChange={(e) => handlePasswordChange(e.target.value)}\r\n                               name={\"password\"} placeholder='Password'/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button id={\"loginButtonID\"} onClick={() => onLogin({\r\n                            userName: userName,\r\n                            password: password,\r\n                            movies: []\r\n                        })} type='submit'>Log in</Button>\r\n                        <Button id={\"submitButtonID\"}\r\n                                onClick={() => addUser({userName: userName, password: password, movies: []})}\r\n                                type='submit'>Sign\r\n                            up</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            <div className={`${props.isLogged ? classes().none : classes().initial}`}>\r\n                <Button onClick={() => dispatch(logout())} className={classes().loginButton}>Log out</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignLogIn;"]},"metadata":{},"sourceType":"module"}