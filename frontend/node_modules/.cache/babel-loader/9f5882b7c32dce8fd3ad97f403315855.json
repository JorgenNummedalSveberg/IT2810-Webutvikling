{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\prosjekt-4-jns\\\\frontend\\\\src\\\\Components\\\\ControlPanel\\\\GenreSelector.tsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './CSS/ControlPanel.css';\nimport './CSS/ControlPanelMobile.css';\nimport { setGenre } from \"../../actions\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport React from \"react\";\n\n// Endrer sjanger vi søker etter\nfunction GenreSelector(props) {\n  // Nødvendig for redux\n  const dispatch = useDispatch(); // Henter inn sjangre fra redux state\n\n  const genres = useSelector(state => state.genres); // Henter inn sjangre fra redux state\n\n  const genreText = useSelector(state => state.filter.genre);\n  const genre = {\n    text: genreText,\n    value: genreText\n  }; // Definerer options for dropdown meny\n\n  const genreOptions = genres.map((genre, index) => {\n    return {\n      key: genre,\n      text: genre,\n      value: genre,\n      id: genre\n    };\n  }); // Opdaterer state når du endrer sjanger\n\n  function onSearchChange(e, data) {\n    dispatch(setGenre(data.props.value));\n    props.refresh();\n  }\n\n  return /*#__PURE__*/React.createElement(Select, {\n    style: {\n      backgroundColor: 'pink'\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    value: genre.value,\n    onChange: onSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, genreOptions.map((genreOption, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: genreOption.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 55\n    }\n  }, genreOption.text)));\n}\n\nexport default GenreSelector;","map":{"version":3,"sources":["C:/webdev/prosjekt-4-jns/frontend/src/Components/ControlPanel/GenreSelector.tsx"],"names":["useDispatch","useSelector","setGenre","MenuItem","Select","React","GenreSelector","props","dispatch","genres","state","genreText","filter","genre","text","value","genreOptions","map","index","key","id","onSearchChange","e","data","refresh","backgroundColor","genreOption"],"mappings":";AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,wBAAP;AACA,OAAO,8BAAP;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,mBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAAuD;AAEnD;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAHmD,CAKnD;;AACA,QAAMS,MAAM,GAAGR,WAAW,CAAES,KAAD,IAAkBA,KAAK,CAACD,MAAzB,CAA1B,CANmD,CAQnD;;AACA,QAAME,SAAS,GAAGV,WAAW,CAAES,KAAD,IAAkBA,KAAK,CAACE,MAAN,CAAaC,KAAhC,CAA7B;AACA,QAAMA,KAAK,GAAG;AAACC,IAAAA,IAAI,EAAEH,SAAP;AAAkBI,IAAAA,KAAK,EAAEJ;AAAzB,GAAd,CAVmD,CAYnD;;AACA,QAAMK,YAAY,GAAGP,MAAM,CAACQ,GAAP,CAAW,CAACJ,KAAD,EAAQK,KAAR,KAAkB;AAC9C,WAAO;AAACC,MAAAA,GAAG,EAAEN,KAAN;AAAaC,MAAAA,IAAI,EAAED,KAAnB;AAA0BE,MAAAA,KAAK,EAAEF,KAAjC;AAAwCO,MAAAA,EAAE,EAAEP;AAA5C,KAAP;AACH,GAFoB,CAArB,CAbmD,CAiBnD;;AACA,WAASQ,cAAT,CAAwBC,CAAxB,EAAgCC,IAAhC,EAA2C;AACvCf,IAAAA,QAAQ,CAACN,QAAQ,CAACqB,IAAI,CAAChB,KAAL,CAAWQ,KAAZ,CAAT,CAAR;AACAR,IAAAA,KAAK,CAACiB,OAAN;AACH;;AAED,sBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE;AAAlB,KADX;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,KAAK,EAAEZ,KAAK,CAACE,KAJjB;AAKI,IAAA,QAAQ,EAAEM,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKL,YAAY,CAACC,GAAb,CAAiB,CAACS,WAAD,EAAcR,KAAd,kBAAwB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAsB,IAAA,KAAK,EAAEQ,WAAW,CAACX,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDW,WAAW,CAACZ,IAA7D,CAAzC,CAPL,CADJ;AAWH;;AAED,eAAeR,aAAf","sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\r\nimport './CSS/ControlPanel.css';\r\nimport './CSS/ControlPanelMobile.css';\r\nimport {setGenre} from \"../../actions\";\r\nimport {MenuItem, Select} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {State} from \"../../types/State\";\r\n\r\n// Endrer sjanger vi søker etter\r\nfunction GenreSelector(props: { refresh: () => void }) {\r\n\r\n    // Nødvendig for redux\r\n    const dispatch = useDispatch();\r\n\r\n    // Henter inn sjangre fra redux state\r\n    const genres = useSelector((state: State) => state.genres);\r\n\r\n    // Henter inn sjangre fra redux state\r\n    const genreText = useSelector((state: State) => state.filter.genre);\r\n    const genre = {text: genreText, value: genreText};\r\n\r\n    // Definerer options for dropdown meny\r\n    const genreOptions = genres.map((genre, index) => {\r\n        return {key: genre, text: genre, value: genre, id: genre};\r\n    });\r\n\r\n    // Opdaterer state når du endrer sjanger\r\n    function onSearchChange(e: any, data: any) {\r\n        dispatch(setGenre(data.props.value));\r\n        props.refresh();\r\n    }\r\n\r\n    return (\r\n        <Select\r\n            style={{backgroundColor: 'pink'}}\r\n            variant='outlined'\r\n            color='primary'\r\n            value={genre.value}\r\n            onChange={onSearchChange}\r\n        >\r\n            {genreOptions.map((genreOption, index) => <MenuItem key={index} value={genreOption.value}>{genreOption.text}</MenuItem>)}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default GenreSelector"]},"metadata":{},"sourceType":"module"}