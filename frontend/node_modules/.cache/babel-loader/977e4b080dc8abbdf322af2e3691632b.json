{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\prosjekt-4-jns\\\\frontend\\\\src\\\\Components\\\\MovieSection\\\\MovieCard.tsx\";\nimport { useDispatch } from \"react-redux\";\nimport { setPopup, showPopup } from \"../../actions\";\nimport { Card, Dimmer, Grid, Icon, Image, Loader } from \"semantic-ui-react\";\nimport ImdbIcon from \"../Shared/ImdbIcon\";\nimport React from \"react\"; // Komponent for å vise frem en film i et kort\n\nfunction MovieCard(props) {\n  // Nødvendig for redux\n  const dispatch = useDispatch(); // Åpner opp Popup.\n\n  function handleClick() {\n    dispatch(setPopup(props.movie));\n    dispatch(showPopup(true));\n  }\n\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    stretched: true,\n    tablet: 5,\n    mobile: 8,\n    computer: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      backgroundColor: '#464646'\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: props.movie.posterurl,\n    wrapped: true,\n    ui: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    id: \"id_\" + props.movie.title.replace(/\\s/g, \"\"),\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, props.movie.title), /*#__PURE__*/React.createElement(Card.Description, {\n    style: {\n      color: '#e5dfca'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \" Genres: \", props.movie.genres.join(\", \"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"year_\" + props.movie.title.replace(/\\s/g, \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \" Year: \", props.movie.year, \" \"))), /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    centered: true,\n    style: {\n      margin: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#e5dfca',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: \"large\",\n    name: \"hourglass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }), parseTime(props.movie.duration)), /*#__PURE__*/React.createElement(ImdbIcon, {\n    rating: props.movie.imdbRating,\n    height: 35,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  })))));\n} // Blanke kort for når nettsiden laster inn filmene\n\n\nexport function DimCard() {\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    stretched: true,\n    tablet: 5,\n    mobile: 8,\n    computer: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"movieCard\",\n    style: {\n      backgroundColor: '#464646',\n      overflow: 'hidden',\n      zIndex: \"8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dimmer, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    size: \"massive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n    src: '../../dimPoster.png',\n    wrapped: true,\n    ui: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })));\n} // Tar inn tid i formatet på databasen og gjør det om til presentabel string, eller rein minuttverdi\n\nfunction parseTime(time) {\n  let minutes = time;\n  let hours = 0;\n\n  while (minutes - 60 > 0) {\n    minutes -= 60;\n    hours++;\n  }\n\n  return hours + 'h' + minutes + 'm';\n}\n\nexport default MovieCard;","map":{"version":3,"sources":["C:/webdev/prosjekt-4-jns/frontend/src/Components/MovieSection/MovieCard.tsx"],"names":["useDispatch","setPopup","showPopup","Card","Dimmer","Grid","Icon","Image","Loader","ImdbIcon","React","MovieCard","props","dispatch","handleClick","movie","backgroundColor","posterurl","title","replace","color","genres","join","year","margin","parseTime","duration","imdbRating","DimCard","overflow","zIndex","time","minutes","hours"],"mappings":";AACA,SAAQA,WAAR,QAA0B,aAA1B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,eAAlC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAsD,mBAAtD;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA4C;AAExC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B,CAHwC,CAKxC;;AACA,WAASc,WAAT,GAAuB;AACnBD,IAAAA,QAAQ,CAACZ,QAAQ,CAACW,KAAK,CAACG,KAAP,CAAT,CAAR;AACAF,IAAAA,QAAQ,CAACX,SAAS,CAAC,IAAD,CAAV,CAAR;AACH;;AAED,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,MAAM,EAAE,CAA/B;AAAkC,IAAA,MAAM,EAAE,CAA1C;AAA6C,IAAA,QAAQ,EAAE,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACc,MAAAA,eAAe,EAAE;AAAlB,KAAb;AAA2C,IAAA,OAAO,EAAEF,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEF,KAAK,CAACG,KAAN,CAAYE,SAAxB;AAAmC,IAAA,OAAO,MAA1C;AAA2C,IAAA,EAAE,EAAE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAE,QAASL,KAAK,CAACG,KAAN,CAAYG,KAAb,CAAoBC,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,CAAzB;AACa,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACuCR,KAAK,CAACG,KAAN,CAAYG,KADnD,CADJ,eAGI,oBAAC,IAAD,CAAM,WAAN;AAAkB,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAE;AAAR,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeR,KAAK,CAACG,KAAN,CAAYM,MAAZ,CAAmBC,IAAnB,CAAwB,IAAxB,CAAf,MADJ,eAEI;AAAK,IAAA,EAAE,EAAE,UAAWV,KAAK,CAACG,KAAN,CAAYG,KAAb,CAAoBC,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmEP,KAAK,CAACG,KAAN,CAAYQ,IAA/E,MAFJ,CAHJ,CAFJ,eAUI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAACJ,MAAAA,KAAK,EAAE,SAAR;AAAmBI,MAAAA,MAAM,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKC,SAAS,CAACb,KAAK,CAACG,KAAN,CAAYW,QAAb,CAFd,CADJ,eAKI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEd,KAAK,CAACG,KAAN,CAAYY,UAA9B;AAA0C,IAAA,MAAM,EAAE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CAVJ,CADJ,CADJ;AAyBH,C,CAED;;;AACA,OAAO,SAASC,OAAT,GAAmB;AACtB,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,MAAM,EAAE,CAA/B;AAAkC,IAAA,MAAM,EAAE,CAA1C;AAA6C,IAAA,QAAQ,EAAE,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,WAAjB;AAA8B,IAAA,KAAK,EAAE;AAACZ,MAAAA,eAAe,EAAE,SAAlB;AAA6Ba,MAAAA,QAAQ,EAAE,QAAvC;AAAiDC,MAAAA,MAAM,EAAE;AAAzD,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,eAII,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE,qBAAZ;AAAmC,IAAA,OAAO,MAA1C;AAA2C,IAAA,EAAE,EAAE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ;AAUH,C,CAED;;AACA,SAASL,SAAT,CAAmBM,IAAnB,EAAyC;AACrC,MAAIC,OAAO,GAAGD,IAAd;AACA,MAAIE,KAAK,GAAG,CAAZ;;AACA,SAAOD,OAAO,GAAG,EAAV,GAAe,CAAtB,EAAyB;AACrBA,IAAAA,OAAO,IAAI,EAAX;AACAC,IAAAA,KAAK;AACR;;AACD,SAAOA,KAAK,GAAG,GAAR,GAAcD,OAAd,GAAwB,GAA/B;AACH;;AAED,eAAerB,SAAf","sourcesContent":["import {Movie} from \"../../types/Movie\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setPopup, showPopup} from \"../../actions\";\r\nimport {Card, Dimmer, Grid, Icon, Image, Loader} from \"semantic-ui-react\";\r\nimport ImdbIcon from \"../Shared/ImdbIcon\";\r\nimport React from \"react\";\r\n\r\n// Komponent for å vise frem en film i et kort\r\nfunction MovieCard(props: { movie: Movie }) {\r\n\r\n    // Nødvendig for redux\r\n    const dispatch = useDispatch();\r\n\r\n    // Åpner opp Popup.\r\n    function handleClick() {\r\n        dispatch(setPopup(props.movie));\r\n        dispatch(showPopup(true));\r\n    }\r\n\r\n    return (\r\n        <Grid.Column stretched tablet={5} mobile={8} computer={3}>\r\n            <Card style={{backgroundColor: '#464646'}} onClick={handleClick}>\r\n                <Image src={props.movie.posterurl} wrapped ui={false}/>\r\n                <Card.Content>\r\n                    <Card.Header id={\"id_\" + (props.movie.title).replace(/\\s/g, \"\")}\r\n                                 style={{color: 'white'}}>{props.movie.title}</Card.Header>\r\n                    <Card.Description style={{color: '#e5dfca'}}>\r\n                        <div> Genres: {props.movie.genres.join(\", \")} </div>\r\n                        <div id={\"year_\" + (props.movie.title).replace(/\\s/g, \"\")}> Year: {props.movie.year} </div>\r\n                    </Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    <Grid centered style={{margin: '5px'}}>\r\n                        <div style={{color: '#e5dfca', margin: 'auto'}}>\r\n                            <Icon size='large' name='hourglass'/>\r\n                            {parseTime(props.movie.duration)}\r\n                        </div>\r\n                        <ImdbIcon rating={props.movie.imdbRating} height={35}/>\r\n                    </Grid>\r\n                </Card.Content>\r\n            </Card>\r\n        </Grid.Column>\r\n\r\n    )\r\n}\r\n\r\n// Blanke kort for når nettsiden laster inn filmene\r\nexport function DimCard() {\r\n    return (\r\n        <Grid.Column stretched tablet={5} mobile={8} computer={3}>\r\n            <Card className={\"movieCard\"} style={{backgroundColor: '#464646', overflow: 'hidden', zIndex: \"8\"}}>\r\n                <Dimmer active>\r\n                    <Loader size='massive'>Loading</Loader>\r\n                </Dimmer>\r\n                <Image src={'../../dimPoster.png'} wrapped ui={false}/>\r\n            </Card>\r\n        </Grid.Column>\r\n    )\r\n}\r\n\r\n// Tar inn tid i formatet på databasen og gjør det om til presentabel string, eller rein minuttverdi\r\nfunction parseTime(time: number): string {\r\n    let minutes = time;\r\n    let hours = 0;\r\n    while (minutes - 60 > 0) {\r\n        minutes -= 60;\r\n        hours++;\r\n    }\r\n    return hours + 'h' + minutes + 'm';\r\n}\r\n\r\nexport default MovieCard"]},"metadata":{},"sourceType":"module"}