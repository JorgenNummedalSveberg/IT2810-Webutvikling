{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\prosjekt-4-jns\\\\frontend\\\\src\\\\Components\\\\MovieSection\\\\MovieCard.tsx\";\nimport { useDispatch } from \"react-redux\";\nimport { setPopup, showPopup } from \"../../actions\";\nimport { Card, CardContent, CardHeader, CardMedia, Grid } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport ImdbIcon from \"../Shared/ImdbIcon\";\nimport React from \"react\"; // Komponent for å vise frem en film i et kort\n\nfunction MovieCard(props) {\n  // Nødvendig for redux\n  const dispatch = useDispatch(); // Åpner opp Popup.\n\n  function handleClick() {\n    dispatch(setPopup(props.movie));\n    dispatch(showPopup(true));\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    xl: 2,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      height: \"100%\",\n      width: '100%',\n      backgroundColor: '#464646'\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"100%\",\n    src: props.movie.posterurl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CardHeader, {\n    id: \"id_\" + props.movie.title.replace(/\\s/g, \"\"),\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, props.movie.title), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#e5dfca'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \" Genres: \", props.movie.genres.join(\", \"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"year_\" + props.movie.title.replace(/\\s/g, \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \" Year: \", props.movie.year, \" \"))), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '5px',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#e5dfca',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(HourglassFullIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, parseTime(props.movie.duration))), /*#__PURE__*/React.createElement(ImdbIcon, {\n    rating: props.movie.imdbRating,\n    height: 35,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })))));\n} // Blanke kort for når nettsiden laster inn filmene\n\n\nexport function DimCard() {\n  return /*#__PURE__*/React.createElement(Grid, {\n    xl: 2,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      height: \"100%\",\n      width: '100%',\n      backgroundColor: '#464646'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    style: {\n      backgroundColor: '#222222'\n    },\n    variant: \"rect\",\n    width: \"100%\",\n    height: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    width: 340,\n    height: 40,\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    width: 340,\n    height: 40,\n    style: {\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n} // Tar inn tid i formatet på databasen og gjør det om til presentabel string, eller rein minuttverdi\n\nfunction parseTime(time) {\n  let minutes = time;\n  let hours = 0;\n\n  while (minutes - 60 > 0) {\n    minutes -= 60;\n    hours++;\n  }\n\n  return hours + 'h' + minutes + 'm';\n}\n\nexport default MovieCard;","map":{"version":3,"sources":["C:/webdev/prosjekt-4-jns/frontend/src/Components/MovieSection/MovieCard.tsx"],"names":["useDispatch","setPopup","showPopup","Card","CardContent","CardHeader","CardMedia","Grid","Skeleton","HourglassFullIcon","ImdbIcon","React","MovieCard","props","dispatch","handleClick","movie","height","width","backgroundColor","posterurl","title","replace","color","genres","join","year","margin","display","flexDirection","parseTime","duration","imdbRating","DimCard","time","minutes","hours"],"mappings":";AACA,SAAQA,WAAR,QAA0B,aAA1B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,eAAlC;AACA,SAAQC,IAAR,EAAcC,WAAd,EAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,IAAlD,QAA6D,mBAA7D;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA4C;AAExC;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B,CAHwC,CAKxC;;AACA,WAASe,WAAT,GAAuB;AACnBD,IAAAA,QAAQ,CAACb,QAAQ,CAACY,KAAK,CAACG,KAAP,CAAT,CAAR;AACAF,IAAAA,QAAQ,CAACZ,SAAS,CAAC,IAAD,CAAV,CAAR;AACH;;AAED,sBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAkC,IAAA,EAAE,EAAE,EAAtC;AAA0C,IAAA,IAAI,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACe,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,MAAxB;AAAgCC,MAAAA,eAAe,EAAE;AAAjD,KAAb;AAA0E,IAAA,OAAO,EAAEJ,WAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE,MAAZ;AAAoB,IAAA,GAAG,EAAEF,KAAK,CAACG,KAAN,CAAYI,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAE,QAASP,KAAK,CAACG,KAAN,CAAYK,KAAb,CAAoBC,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,CAAxB;AACa,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACuCV,KAAK,CAACG,KAAN,CAAYK,KADnD,CAJJ,eAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeV,KAAK,CAACG,KAAN,CAAYQ,MAAZ,CAAmBC,IAAnB,CAAwB,IAAxB,CAAf,MADJ,eAEI;AAAK,IAAA,EAAE,EAAE,UAAWZ,KAAK,CAACG,KAAN,CAAYK,KAAb,CAAoBC,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmET,KAAK,CAACG,KAAN,CAAYU,IAA/E,MAFJ,CADJ,CANJ,eAYI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,KAAT;AAAgBC,MAAAA,OAAO,EAAE,MAAzB;AAAiCC,MAAAA,aAAa,EAAE;AAAhD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAACN,MAAAA,KAAK,EAAE,SAAR;AAAmBI,MAAAA,MAAM,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAE,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,SAAS,CAACjB,KAAK,CAACG,KAAN,CAAYe,QAAb,CAAb,CAFJ,CADJ,eAKI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAElB,KAAK,CAACG,KAAN,CAAYgB,UAA9B;AAA0C,IAAA,MAAM,EAAE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CAZJ,CADJ,CADJ;AA2BH,C,CAED;;;AACA,OAAO,SAASC,OAAT,GAAmB;AACtB,sBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAkC,IAAA,EAAE,EAAE,EAAtC;AAA0C,IAAA,IAAI,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAChB,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,MAAxB;AAAgCC,MAAAA,eAAe,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAACA,MAAAA,eAAe,EAAE;AAAlB,KAAjB;AAA+C,IAAA,OAAO,EAAC,MAAvD;AAA8D,IAAA,KAAK,EAAE,MAArE;AAA6E,IAAA,MAAM,EAAE,GAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAE,GAAlC;AAAuC,IAAA,MAAM,EAAE,EAA/C;AAAmD,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAE;AAAV,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAE,GAAlC;AAAuC,IAAA,MAAM,EAAE,EAA/C;AAAmD,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAAE;AAAV,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ;AASH,C,CAED;;AACA,SAASG,SAAT,CAAmBI,IAAnB,EAAyC;AACrC,MAAIC,OAAO,GAAGD,IAAd;AACA,MAAIE,KAAK,GAAG,CAAZ;;AACA,SAAOD,OAAO,GAAG,EAAV,GAAe,CAAtB,EAAyB;AACrBA,IAAAA,OAAO,IAAI,EAAX;AACAC,IAAAA,KAAK;AACR;;AACD,SAAOA,KAAK,GAAG,GAAR,GAAcD,OAAd,GAAwB,GAA/B;AACH;;AAED,eAAevB,SAAf","sourcesContent":["import {Movie} from \"../../types/Movie\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setPopup, showPopup} from \"../../actions\";\r\nimport {Card, CardContent, CardHeader, CardMedia, Grid} from \"@material-ui/core\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\r\nimport ImdbIcon from \"../Shared/ImdbIcon\";\r\nimport React from \"react\";\r\n\r\n// Komponent for å vise frem en film i et kort\r\nfunction MovieCard(props: { movie: Movie }) {\r\n\r\n    // Nødvendig for redux\r\n    const dispatch = useDispatch();\r\n\r\n    // Åpner opp Popup.\r\n    function handleClick() {\r\n        dispatch(setPopup(props.movie));\r\n        dispatch(showPopup(true));\r\n    }\r\n\r\n    return (\r\n        <Grid xl={2} lg={3} md={4} sm={6} xs={12} item>\r\n            <Card style={{height: \"100%\", width: '100%', backgroundColor: '#464646'}} onClick={handleClick}>\r\n                <CardMedia>\r\n                    <img width={\"100%\"} src={props.movie.posterurl}/>\r\n                </CardMedia>\r\n                <CardHeader id={\"id_\" + (props.movie.title).replace(/\\s/g, \"\")}\r\n                             style={{color: 'white'}}>{props.movie.title}</CardHeader>\r\n                <CardContent>\r\n                    <div style={{color: '#e5dfca'}}>\r\n                        <div> Genres: {props.movie.genres.join(\", \")} </div>\r\n                        <div id={\"year_\" + (props.movie.title).replace(/\\s/g, \"\")}> Year: {props.movie.year} </div>\r\n                    </div>\r\n                </CardContent>\r\n                <CardContent>\r\n                    <div style={{margin: '5px', display: 'flex', flexDirection: 'row'}}>\r\n                        <div style={{color: '#e5dfca', margin: 'auto'}}>\r\n                            <HourglassFullIcon fontSize={\"large\"}/>\r\n                            <p>{parseTime(props.movie.duration)}</p>\r\n                        </div>\r\n                        <ImdbIcon rating={props.movie.imdbRating} height={35}/>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\n// Blanke kort for når nettsiden laster inn filmene\r\nexport function DimCard() {\r\n    return (\r\n        <Grid xl={2} lg={3} md={4} sm={6} xs={12} item>\r\n            <Card style={{height: \"100%\", width: '100%', backgroundColor: '#464646'}}>\r\n                <Skeleton style={{backgroundColor: '#222222'}} variant=\"rect\" width={\"100%\"} height={600} />\r\n                <Skeleton animation=\"wave\" width={340} height={40} style={{ margin: 10 }} />\r\n                <Skeleton animation=\"wave\" width={340} height={40} style={{ margin: 10 }} />\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n// Tar inn tid i formatet på databasen og gjør det om til presentabel string, eller rein minuttverdi\r\nfunction parseTime(time: number): string {\r\n    let minutes = time;\r\n    let hours = 0;\r\n    while (minutes - 60 > 0) {\r\n        minutes -= 60;\r\n        hours++;\r\n    }\r\n    return hours + 'h' + minutes + 'm';\r\n}\r\n\r\nexport default MovieCard"]},"metadata":{},"sourceType":"module"}