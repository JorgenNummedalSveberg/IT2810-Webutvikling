{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\prosjekt-4-jns\\\\frontend\\\\src\\\\Components\\\\MovieSection\\\\Popup.tsx\";\nimport React from 'react';\nimport './CSS/Popup.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { login, setPopup, showPopup } from \"../../actions\";\nimport ImdbIcon from \"../Shared/ImdbIcon\";\n\nfunction Popup() {\n  // Henter state fra redux\n  const reduxState = useSelector(state => state); // Nødvendig for redux\n\n  const dispatch = useDispatch();\n  let req = {};\n\n  if (!!reduxState.user) {\n    req = {\n      method: 'POST',\n      body: JSON.stringify({\n        userName: reduxState.user.userName,\n        movieId: reduxState.details.movie._id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } // Tar vekk en view og fjerner den fra lista di\n\n\n  function changeView(remove) {\n    fetch('http://localhost:5000/api/user/' + (remove ? 'removeMovie' : 'addMovie'), req).then(response => {\n      if (response.ok) {\n        if (remove) {\n          reduxState.details.movie.watches--;\n          reduxState.user.movies = reduxState.user.movies.filter(movieId => movieId !== reduxState.details.movie._id);\n        } else {\n          reduxState.details.movie.watches++;\n          reduxState.user.movies.push(reduxState.details.movie._id);\n        }\n\n        dispatch(setPopup(reduxState.details.movie));\n        dispatch(login(reduxState.user));\n      }\n    }).catch(error => console.log(error));\n  }\n\n  return (\n    /*#__PURE__*/\n    // marginRight her er 20px større fordi den blir offset av GridView\n    React.createElement(\"div\", {\n      className: \"Popup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(ArrowLeftIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }\n      }),\n      \"aria-label\": \"back\",\n      id: \"backButtonID\",\n      className: \"BackButton\",\n      onClick: () => dispatch(showPopup(false)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"movie poster could not load\",\n      src: reduxState.details.movie.posterurl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, reduxState.details.movie.title), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, reduxState.details.movie.year), /*#__PURE__*/React.createElement(ImdbIcon, {\n      rating: reduxState.details.movie.imdbRating,\n      height: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lables\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, !!reduxState.user ?\n    /*#__PURE__*/\n\n    /*<Button id={\"watchButton\"} className=\"button\"\r\n        disabled={reduxState.user.movies.includes(reduxState.details.movie._id)}\r\n        onClick={() => changeView(false)}\r\n        color='blue' content='Watched' icon='eye'\r\n        label={{\r\n            basic: true,\r\n            color: 'blue',\r\n            pointing: 'left',\r\n            content: reduxState.details.movie.watches\r\n        }}/>*/\n    React.createElement(Button, {\n      id: \"watchButton\",\n      disabled: reduxState.user.movies.includes(reduxState.details.movie._id),\n      onClick: () => changeView(false),\n      color: \"primary\",\n      endIcon: /*#__PURE__*/React.createElement(VisibilityIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 46\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"Watched\") : null, !!reduxState.user && reduxState.user.movies.includes(reduxState.details.movie._id) ?\n    /*#__PURE__*/\n\n    /*<Button id={\"removeButton\"} className=\"button\" onClick={() => changeView(true)}\r\n        color='red' content='Remove from my list' icon='trash'/>*/\n    React.createElement(Button, {\n      id: \"removeButton\",\n      color: \"secondary\",\n      onClick: () => changeView(true),\n      color: \"primary\",\n      endIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 46\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Remove from my list\") : null), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, reduxState.details.movie.genres.join(\", \")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, reduxState.details.movie.storyline))))\n  );\n}\n\nexport default Popup;","map":{"version":3,"sources":["C:/webdev/prosjekt-4-jns/frontend/src/Components/MovieSection/Popup.tsx"],"names":["React","useDispatch","useSelector","Button","ArrowLeftIcon","VisibilityIcon","DeleteIcon","login","setPopup","showPopup","ImdbIcon","Popup","reduxState","state","dispatch","req","user","method","body","JSON","stringify","userName","movieId","details","movie","_id","headers","changeView","remove","fetch","then","response","ok","watches","movies","filter","push","catch","error","console","log","posterurl","title","year","imdbRating","includes","genres","join","storyline"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './CSS/Popup.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {State} from \"../../types/State\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {login, setPopup, showPopup} from \"../../actions\";\r\nimport ImdbIcon from \"../Shared/ImdbIcon\";\r\n\r\n\r\nfunction Popup() {\r\n\r\n    // Henter state fra redux\r\n    const reduxState = useSelector((state: State) => state);\r\n\r\n    // Nødvendig for redux\r\n    const dispatch = useDispatch();\r\n\r\n    let req = {};\r\n    if (!!reduxState.user) {\r\n        req = ({\r\n            method: 'POST',\r\n            body: JSON.stringify({userName: reduxState.user.userName, movieId: reduxState.details.movie._id}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    // Tar vekk en view og fjerner den fra lista di\r\n    function changeView(remove: boolean) {\r\n        fetch('http://localhost:5000/api/user/' + (remove ? 'removeMovie' : 'addMovie'), req)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    if (remove) {\r\n                        reduxState.details.movie.watches--;\r\n                        reduxState.user.movies = reduxState.user.movies.filter(movieId => movieId !== reduxState.details.movie._id);\r\n                    } else {\r\n                        reduxState.details.movie.watches++;\r\n                        reduxState.user.movies.push(reduxState.details.movie._id);\r\n                    }\r\n                    dispatch(setPopup(reduxState.details.movie));\r\n                    dispatch(login(reduxState.user));\r\n                }})\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    return (\r\n        // marginRight her er 20px større fordi den blir offset av GridView\r\n        <div className=\"Popup\">\r\n            <Button startIcon={<ArrowLeftIcon/>} aria-label='back' id={\"backButtonID\"} className=\"BackButton\" onClick={() => dispatch(showPopup(false))}>\r\n                Back\r\n            </Button>\r\n            <div className=\"movieContent\">\r\n                <img alt=\"movie poster could not load\" src={reduxState.details.movie.posterurl}/>\r\n                <div className=\"info\">\r\n                    <h1>{reduxState.details.movie.title}</h1>\r\n                    <h2>{reduxState.details.movie.year}</h2>\r\n                    <ImdbIcon rating={reduxState.details.movie.imdbRating} height={50}/>\r\n                    <div className=\"lables\">\r\n                        {!!reduxState.user ?\r\n                            /*<Button id={\"watchButton\"} className=\"button\"\r\n                                disabled={reduxState.user.movies.includes(reduxState.details.movie._id)}\r\n                                onClick={() => changeView(false)}\r\n                                color='blue' content='Watched' icon='eye'\r\n                                label={{\r\n                                    basic: true,\r\n                                    color: 'blue',\r\n                                    pointing: 'left',\r\n                                    content: reduxState.details.movie.watches\r\n                                }}/>*/\r\n                            <Button id='watchButton'\r\n                                    disabled={reduxState.user.movies.includes(reduxState.details.movie._id)}\r\n                                    onClick={() => changeView(false)}\r\n                                    color='primary'\r\n                                    endIcon={<VisibilityIcon/>}\r\n                                    >Watched</Button>\r\n                            : null}\r\n                        {!!reduxState.user && reduxState.user.movies.includes(reduxState.details.movie._id) ?\r\n                            /*<Button id={\"removeButton\"} className=\"button\" onClick={() => changeView(true)}\r\n                                color='red' content='Remove from my list' icon='trash'/>*/\r\n                            <Button id='removeButton'\r\n                                    color='secondary'\r\n                                    onClick={() => changeView(true)}                                    color='primary'\r\n                                    endIcon={<DeleteIcon/>}\r\n                            >Remove from my list</Button>\r\n                            :\r\n                                null}\r\n                    </div>\r\n                    <h3>{reduxState.details.movie.genres.join(\", \")}</h3>\r\n                    <p>{reduxState.details.movie.storyline}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup;"]},"metadata":{},"sourceType":"module"}